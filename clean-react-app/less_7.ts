import {IUser} from './interfaces/user.interface'

const func = (str: string): number|string => {//через двокрапку прописуєм тип аргументу. Після круглих дужок так само вказуєм тип що функція має повертати
    return  55
}
console.log(func('sss'));

// командою tsc і назва файлу перекомпільовуємо в звичайний js
//для перевірки відпрацювання консоль логів в командній строці пришем команду node і назву файлу JS
//можна задавати декілька типів повернення з функції через таку трубу number | string
//якщо ф-я нічого не має повертати то пропишем їй тип VOID


////------------
//Отже ми взнали що в тайпскрипті потрібно вказувати тип аргументів та тип повернення данних з ф-ї
//func = (str: string): number|string => {
//а якщо void то це ф-я без повернення

// типізуєм обєкт ---
const users:{
    name:string,
    age:number,
    status:boolean
}={age:55,name:'sasha',status:false}
//також ми можем визначити можливість чи буде якесь поле чи ні за допомогою  елвіса -  name?:string,
//як бачимо багото незручного коду...тому його виносять в інтерфейси
//зробим окрему папку для інтерфейсів, створим файл з тематичною назвою user.interface
//в цьому файлі першим ділом треба експортнути export interface і назвати наш інтерфейс, його прийнято називати з великої букви I наприклад IUser
//тепер можемо перенести всю типізацію нашого обєкта в щойноствонений інтерфейс.
//Оскільки інтерфейс це не обєкт тому розділяємо поля крапкою з комою
//щоб скористатись цим інтерфейсом його потрібно імпортнути так само як в реакті
// import {IUser} from './interfaces/user.interface'

const user:IUser={
    age:55,
    name:'sasha',
    status:true
}
//цей інтерфейс можемо передати аргументом в ф-ю
// const userCount =(user:IUser)=>{
// return user
// }
// const newUser = userCount({age:30,status:false,name:'ssss'})
// console.log(newUser)
//якщо у нас у виклику ф-ї бракує якогось поля або воно нам не потрібне то можна
// зробити ДЖЕНЕРІК - це потрібно рописати Partial і огорнути нашу аргументу в праву і ліву скобочку і тобі
// буде виглядати ніби у інтерфейсі у кожному полі є елвіс. Але тоді і там де прописуєм що має
// повернути ф-я також оготаєм у :Partial<IUser>
const userCount =(user:Partial<IUser>):Partial<IUser>=>{
return user
}
const newUser = userCount({status:false,name:'ssss'})
console.log(newUser)